<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPF_CustomControls.Controls"
                    xmlns:system="clr-namespace:System;assembly=system.runtime"
                    xmlns:converters="clr-namespace:WPF_CustomControls.Converters"
                    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase">

    <converters:CanvasCenteringConverter x:Key="canvasCenteringConverter" />
    <converters:MultiplyConverter x:Key="multiplyConverter" />
    <converters:DebugConverter x:Key="debugConverter" />

    <Style x:Key="Alternate" 
           TargetType="{x:Type local:BusyIndicator}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Height"
                Value="80" />
        <Setter Property="Width"
                Value="80" />
        <Setter Property="Foreground"
                Value="SlateGray" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="IndicatorCount"
                Value="3" />
        <Setter Property="CycleDuration"
                Value="0:0:3" />
        <Setter Property="IndicatorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Ellipse Fill="{Binding Foreground}"
                             Width="10"
                             Height="10"
                             Margin="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EasingFunction">
            <Setter.Value>
                <CubicEase EasingMode="EaseInOut" />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControlAngularVelocity"
                Value="-90" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BusyIndicator}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Visibility="{TemplateBinding NotBusyVisibility}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                        <ItemsControl x:Name="itemsControl"
                                      Margin="-2,-2,0,0"
                                      RenderTransformOrigin="0.5,0.5"
                                      ItemsSource="{TemplateBinding AngleAndPhaseList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.Tag>
                                <system:Double />
                            </ItemsControl.Tag>
                            <ItemsControl.RenderTransform>
                                <SkewTransform AngleX="50" />
                            </ItemsControl.RenderTransform>

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Left">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource canvasCenteringConverter}">
                                                <Binding ElementName="itemsControl"
                                                         Path="ActualWidth" />
                                                <Binding RelativeSource="{RelativeSource Mode=Self}"
                                                         Path="ActualWidth" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Canvas.Top">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource canvasCenteringConverter}">
                                                <Binding ElementName="itemsControl"
                                                         Path="ActualHeight" />
                                                <Binding RelativeSource="{RelativeSource Mode=Self}"
                                                         Path="ActualHeight" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type system:TimeSpan}">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="0"
                                                      RenderTransformOrigin="0.5,0.5">
                                        <ContentPresenter.Resources>
                                            <converters:DebugConverter x:Key="debug" />
                                        </ContentPresenter.Resources>
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform>
                                                    <TranslateTransform.Y>
                                                        <MultiBinding Converter="{StaticResource canvasCenteringConverter}"
                                                                      ConverterParameter="-1">
                                                            <Binding ElementName="itemsControl"
                                                                     Path="ActualHeight" />
                                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}"
                                                                     Path="ActualHeight" />
                                                        </MultiBinding>
                                                    </TranslateTransform.Y>
                                                </TranslateTransform>
                                                <RotateTransform x:Name="rotateTransform"
                                                                 Angle="{Binding Path=StartAngle}" />
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>

                                        <ContentPresenter.Content>
                                            <Control DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}}"
                                                     Template="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}, Path=IndicatorTemplate}" />
                                        </ContentPresenter.Content>

                                        <ContentPresenter.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="rotateTransform"
                                                                             Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                                             From="{Binding Path=StartAngle}"
                                                                             To="{Binding Path=FinalAngle}"
                                                                             BeginTime="{Binding Path=Phase}"
                                                                             Duration="{Binding Duration}"
                                                                             RepeatBehavior="Forever"
                                                                             EasingFunction="{Binding EasingFunction}" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ContentPresenter.Triggers>
                                    </ContentPresenter>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>