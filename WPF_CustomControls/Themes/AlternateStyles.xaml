<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:presentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:local="clr-namespace:WPF_CustomControls.Controls"
                    xmlns:system="clr-namespace:System;assembly=system.runtime"
                    xmlns:converters="clr-namespace:WPF_CustomControls.Converters"
                    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
                    xmlns:anim="clr-namespace:WPF_CustomControls.Animations">

    <converters:CanvasCenteringConverter x:Key="canvasCenteringConverter" />
    <converters:MultiplyConverter x:Key="multiplyConverter" />
    <converters:ScaleAndOffsetConverter x:Key="angleConverter"
                                        Scale="1"
                                        Offset="0" />
    <converters:ScaleAndOffsetConverter x:Key="minusHalfScaleConverter"
                                        Scale="-0.5"
                                        Offset="0" />
    <converters:OrbitAngleConverter x:Key="orbitAngleConverter"
                                    Scale="0.5"
                                    OddIndexOffset="180" />
    <converters:DebugConverter x:Key="debugConverter" />

    <Style x:Key="Atom"
           TargetType="{x:Type local:BusyIndicator}">
        <Style.Resources>
            <Style x:Key="Nucleon"
                   TargetType="{x:Type Ellipse}"
                   presentationOptions:Freeze="True">
                <Setter Property="Width"
                        Value="12" />
                <Setter Property="Height"
                        Value="12" />
                <Setter Property="Fill"
                        Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}, Path=SecondaryForeground}" />
                <Setter Property="Stroke"
                        Value="DarkSlateGray" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform Y="-3" />
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Height"
                Value="100" />
        <Setter Property="Width"
                Value="100" />
        <Setter Property="Foreground"
                Value="CornflowerBlue" />
        <Setter Property="SecondaryForeground"
                Value="Green" />
        <Setter Property="TraceBrush"
                Value="LightGray" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="IndicatorCount"
                Value="3" />
        <Setter Property="CycleDuration"
                Value="0:0:3" />
        <Setter Property="IndicatorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Ellipse Fill="{Binding Foreground}"
                             Width="10"
                             Height="10"
                             Margin="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CentralControlTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <local:CenteringCanvas>
                        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}, Path=AngleAndPhaseList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <local:CenteringCanvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter RenderTransformOrigin="0.5,0.5">
                                        <ContentPresenter.RenderTransform>
                                            <RotateTransform Angle="{Binding Converter={StaticResource orbitAngleConverter}}" />
                                        </ContentPresenter.RenderTransform>
                                        <ContentPresenter.Content>
                                            <Ellipse Style="{StaticResource Nucleon}" />
                                        </ContentPresenter.Content>
                                    </ContentPresenter>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </local:CenteringCanvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EasingFunction">
            <Setter.Value>
                <CubicEase EasingMode="EaseInOut" />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControlAngularVelocity"
                Value="-90" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BusyIndicator}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Visibility="{TemplateBinding NotBusyVisibility}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                        <ItemsControl x:Name="itemsControl"
                                      ItemsSource="{TemplateBinding AngleAndPhaseList}">
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <local:CenteringCanvas>
                                        <ItemsPresenter />
                                        <Control Panel.ZIndex="10"
                                                 DataContext="{TemplateBinding DataContext}"
                                                 Template="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}, Path=CentralControlTemplate}" />
                                    </local:CenteringCanvas>
                                </ControlTemplate>
                            </ItemsControl.Template>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <local:CenteringCanvas IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter x:Name="contentPresenter"
                                                      RenderTransformOrigin="0.5,0.5">
                                        <ContentPresenter.RenderTransform>
                                            <RotateTransform x:Name="orbitRotation"
                                                             Angle="{Binding Converter={StaticResource orbitAngleConverter}}" />
                                        </ContentPresenter.RenderTransform>

                                        <ContentPresenter.Content>
                                            <Canvas x:Name="canvas"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Width="60"
                                                    Height="60"
                                                    Background="Transparent">

                                                <Control x:Name="indicatorCtrl"
                                                         DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}}"
                                                         Template="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}, Path=IndicatorTemplate}"
                                                         RenderTransformOrigin="0.5,0.5"
                                                         Panel.ZIndex="10">
                                                    <Control.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform X="{Binding ElementName=indicatorCtrl, Path=ActualWidth, Converter={StaticResource minusHalfScaleConverter}}"
                                                                                Y="{Binding ElementName=indicatorCtrl, Path=ActualHeight, Converter={StaticResource minusHalfScaleConverter}}" />
                                                            <MatrixTransform x:Name="matrixTransform">
                                                                <MatrixTransform.Matrix>
                                                                    <Matrix />
                                                                </MatrixTransform.Matrix>
                                                            </MatrixTransform>
                                                        </TransformGroup>
                                                    </Control.RenderTransform>
                                                </Control>

                                                <!-- Data="M 0,30 A 30,30 0 1 1 60,30 A 30,30 0 1 1 0,30" -->
                                                <Path Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:BusyIndicator}, Path=TraceBrush}"
                                                      StrokeThickness="1"
                                                      Data="M -16,5 A 30,10 30 1 1 76,55 A 30,10 30 1 1 -16,5"
                                                      presentationOptions:Freeze="True"
                                                      Panel.ZIndex="-10">
                                                </Path>
                                            </Canvas>
                                        </ContentPresenter.Content>

                                        <ContentPresenter.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<MatrixAnimationUsingPath Storyboard.TargetName="matrixTransform"
                                                                                      Storyboard.TargetProperty="Matrix"
                                                                                      DoesRotateWithTangent="False"
                                                                                      Duration="{Binding Duration}"
                                                                                      RepeatBehavior="Forever">
                                                                <MatrixAnimationUsingPath.PathGeometry>
                                                                    <PathGeometry Figures="M -16,5 A 30,10 30 1 1 76,55 A 30,10 30 1 1 -16,5"
                                                                                  presentationOptions:Freeze="True" />
                                                                </MatrixAnimationUsingPath.PathGeometry>
                                                            </MatrixAnimationUsingPath>-->
                                                            <anim:MatrixAnimationUsingPathExtension Storyboard.TargetName="matrixTransform"
                                                                                                    Storyboard.TargetProperty="Matrix"
                                                                                                    DoesRotateWithTangent="False"
                                                                                                    Duration="{Binding Duration}"
                                                                                                    RepeatBehavior="Forever">
                                                                <anim:MatrixAnimationUsingPathExtension.PathGeometry>
                                                                    <PathGeometry Figures="M -16,5 A 30,10 30 1 1 76,55 A 30,10 30 1 1 -16,5"
                                                                                  presentationOptions:Freeze="True" />
                                                                </anim:MatrixAnimationUsingPathExtension.PathGeometry>
                                                                <anim:MatrixAnimationUsingPathExtension.EasingFunction>
                                                                    <QuinticEase EasingMode="EaseInOut" />
                                                                </anim:MatrixAnimationUsingPathExtension.EasingFunction>
                                                            </anim:MatrixAnimationUsingPathExtension>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ContentPresenter.Triggers>
                                    </ContentPresenter>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>